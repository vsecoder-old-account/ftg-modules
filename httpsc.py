from .. import loader, utils
from asyncio import sleep
from telethon.tl.types import *

responses = {
    100: ('‚ÑπÔ∏è Continue', '–ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–π'),
    101: ('‚ÑπÔ∏è Switching Protocols', '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞; –ø–æ–¥—á–∏–Ω–π—Å—è Upgrade —Ö–µ–¥–µ—Ä—É'),

    200: ('‚úÖ OK', '–ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω—ã–π, –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω'),
    201: ('‚úÖ Created', '–ó–∞–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω, url –ø—Ä–∏–ª–∞–≥–∞–µ—Ç—Å—è'),
    202: ('‚úÖ Accepted', '–ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ñ—Ñ–ª–∞–π–Ω'),
    203: ('‚úÖ Non-Authoritative Information', '–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ –∫—ç—à–∞'),
    204: ('‚úÖ No Content', '–ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω—ã–π, –Ω–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞'),
    205: ('‚úÖ Reset Content', '–û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è'),
    206: ('‚úÖ Partial Content', '–ß–∞—Å—Ç–∏—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–∏–ª–∞–≥–∞–µ—Ç—Å—è'),

    300: ('‚Ü©Ô∏è Multiple Choices', '–£ –æ–±—ä–µ–∫—Ç–∞ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤'),
    301: ('‚Ü©Ô∏è Moved Permanently', '–ê–¥—Ä–µ—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞'),
    302: ('‚Ü©Ô∏è Found', '–ê–¥—Ä–µ—Å –∏–∑–º–µ–Ω–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω–æ'),
    303: ('‚Ü©Ô∏è See Other', '–ê–¥—Ä–µ—Å –∏\\–∏–ª–∏ –æ–±—ä–µ–∫—Ç –∏–∑–º–µ–Ω–µ–Ω'),
    304: ('‚Ü©Ô∏è Not Modified', '–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞'),
    305: ('‚Ü©Ô∏è Use Proxy', '–ù–µ–≤–µ—Ä–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è'),
    307: ('‚Ü©Ô∏è Temporary Redirect', '–í—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'),

    400: ('üö´ Bad Request', '–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –∫–ª–∏–µ–Ω—Ç–∞'),
    401: ('üö´ Unauthorized', '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'),
    402: ('üö´ Payment Required', '–ù–µ –æ–ø–ª–∞—á–µ–Ω–æ'),
    403: ('üö´ Forbidden', '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - –±–∞–Ω / –Ω–µ—Ö–≤–∞—Ç–∫–∞ –ø—Ä–∞–≤'),
    404: ('üö´ Not Found', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'),
    405: ('üö´ Method Not Allowed', '–ú–µ—Ç–æ–¥ –∑–∞–ø—Ä–µ—â–µ–Ω'),
    406: ('üö´ Not Acceptable', '–ú–µ—Ç–æ–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'),
    407: ('üö´ Proxy Authentication Required', '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∫—Å–∏'),
    408: ('üö´ Request Timeout', '–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ'),
    409: ('üö´ Conflict', '–ö–æ–Ω—Ñ–ª–∏–∫—Ç –∑–∞–ø—Ä–æ—Å–æ–≤'),
    410: ('üö´ Gone', '–ê–¥—Ä–µ—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –±—ã–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω'),
    411: ('üö´ Length Required', '–¢—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞–Ω–∏–µ –¥–ª–∏–Ω—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞'),
    412: ('üö´ Precondition Failed', '–ü—Ä–µ–¥—É—Å–ª–æ–≤–∏–µ –≤ —Ö–µ–¥–µ—Ä–∞—Ö –Ω–µ–≤–µ—Ä–Ω–æ'),
    413: ('üö´ Request Entity Too Large', '–ó–∞–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π'),
    414: ('üö´ Request-URI Too Long', '–°—Å—ã–ª–∫–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è'),
    415: ('üö´ Unsupported Media Type', '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞'),
    416: ('üö´ Requested Range Not Satisfiable', '–ù–µ –≤—Ö–æ–¥–∏—Ç –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω'),
    417: ('üö´ Expectation Failed', '–û–∂–∏–¥–∞–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è'),

    500: ('üí¢ Internal Server Error', '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'),
    501: ('üí¢ Not Implemented', '–û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'),
    502: ('üí¢ Bad Gateway', '–ü—Ä–æ–∫—Å–∏ \\ —à–ª—é–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'),
    503: ('üí¢ Service Unavailable', '–ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'),
    504: ('üí¢ Gateway Timeout', '–¢–∞–π–º–∞—É—Ç –ø—Ä–æ–∫—Å–∏ \\ —à–ª—é–∑–∞'),
    505: ('üí¢ HTTP Version Not Supported', '–í–µ—Ä—Å–∏—è HTTP –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º'),
}


@loader.tds
class HttpErrorsMod(loader.Module):
    """Dictionary of http status codes"""
    strings = {
        "name": "HttpStatusCodes",
       'args_incorrect': '<b>Incorrect args</b>',
       'not_found': '<b>Code not found</b>',
       'syntax_error': '<b>Args are mandatory</b>',
       'scode': '<b>{} {}</b>\n‚öúÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞: <i>{}</i>'
    }

    @loader.unrestricted
    async def httpsccmd(self, message):
        """<statuscode> - Get status code info"""
        args = utils.get_args(message)
        if not args:
            await utils.answer(message, self.strings('syntax_error', message))

        try:
            if int(args[0]) not in responses:
                await utils.answer(message, self.strings('not_found', message))
        except ValueError:
            await utils.answer(message, self.strings('args_incorrect', message))

        await utils.answer(message, self.strings('scode', message).format(responses[int(args[0])][0], args[0], responses[int(args[0])][1]))

    @loader.unrestricted
    async def httpscscmd(self, message):
        """Get all http status codes"""
        await utils.answer(message, '\n'.join(['<b>' + str(sc) + ': ' + _[0][0] + ' ' + _[1] + '</b>' for sc, _ in responses.items()]))
